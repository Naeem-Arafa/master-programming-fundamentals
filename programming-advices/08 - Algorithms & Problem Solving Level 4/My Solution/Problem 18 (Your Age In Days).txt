#pragma warning(disable : 4996)
#include <iostream>
#include <iomanip>
#include <string>
#include <cstdlib>
using namespace std;

short ReadNum(string massage)
{
    short Num;
    do
    {
        cout << massage << " ";
        cin >> Num;
    } while (Num < 0);

    return Num;
}

short ReadNum(string massage, short From, short To)
{
    short Num;
    do
    {
        cout << massage << " ";
        cin >> Num;
    } while (Num < From || Num > To);

    return Num;
}

bool IsLeapYear(short Year)
{
    return(Year % 400 == 0) || (Year % 4 == 0 && Year % 100 != 0);
}

int NumberOfDays(short Year)
{
    return (IsLeapYear(Year)) ? 366 : 365;
}


short NumberOfDaysInMonth(short Month, short Year)
{
    if (Month < 1 || Month > 12)
    {
        return 0;
    }

    return (Month == 2) ? ((IsLeapYear(Year)) ? 29 : 28) :
        (Month <= 7 && Month % 2 != 0) || (7 < Month && Month % 2 == 0) ? 31 : 30;
}

bool IsLastDayInMonth(short Day, short Month, short Year)
{
    return (NumberOfDaysInMonth(Month, Year) == Day);
}

bool IsLastMonthInYear(short Month)
{
    return (Month == 12);
}


struct sDate
{
    short Day;
    short Month;
    short Year;
};

bool IsDate1LessThanDate2(sDate Date, sDate Date2)
{
    return (Date.Year < Date2.Year) ? true : (Date.Month < Date2.Month) ? true : (Date.Day < Date2.Day) ? true : false;
}


sDate IncreaseDateByOne(short Day, short Month, short Year)
{
    sDate Date;
    Date.Day = Day;
    Date.Month = Month;
    Date.Year = Year;

    if (IsLastDayInMonth(Date.Day, Date.Month, Date.Year))
    {
        if (IsLastMonthInYear(Date.Month))
        {
            Date.Year++;
            Date.Month = 1;
            Date.Day = 1;
        }
        else
        {
            Date.Month++;
            Date.Day = 1;
        }
    }
    else
    {
        Date.Day++;
    }
    return Date;
}


int GetDiffrenceInDays(sDate Date, sDate Date2, bool EndDay = false)
{
    int Days = 0;
    while (IsDate1LessThanDate2(Date, Date2))
    {
        Days++;
        Date = IncreaseDateByOne(Date.Day, Date.Month, Date.Year);
    }
    return (EndDay) ? ++Days : Days;
}


sDate GetSystemDate()
{
    sDate Date;
    time_t t = time(0);
    tm* now = localtime(&t);
    Date.Day = now->tm_mday;
    Date.Month = now->tm_mon + 1;
    Date.Year = now->tm_year + 1900;
    return Date;
}

int main()
{
    //cout << INT_MAX;
    sDate Date;
    cout << "Please enter your date of birth? \n";
    Date.Day = ReadNum("Enter A Day? ", 1, 31);
    Date.Month = ReadNum("Enter A Month? ", 1, 12);
    Date.Year = ReadNum("Enter A Year? ");
    
    sDate Date2 = GetSystemDate();
    
    cout << "\nYour Age is: " << GetDiffrenceInDays(Date, Date2, true) << " Day(s).";
    
    
    return 0;
}
//2147483647


